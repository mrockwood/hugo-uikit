/**
 * Name:            Arrow
 * Description:     Component to add arrows to other compoenents.
 *                  Adopted from https://garden.zendesk.com/css-components/arrows/
 *
 * Component:       `c-arrow`
 *
 * Modifiers:       `c-arrow-bl`
 *                  `c-arrow-b`
 *                  `c-arrow-br`
 *                  `c-arrow-lt`
 *                  `c-arrow-l`
 *                  `c-arrow-lb`
 *                  `c-arrow-rt`
 *                  `c-arrow-r`
 *                  `c-arrow-rb`
 *                  `c-arrow-tl`
 *                  `c-arrow-t`
 *                  `c-arrow-tr`
 *
 * ======================================================================== */


/**
 * Variables
 * ======================================================================== */

:root {

    --arrow-size: var(--arrow-size-medium);

    --arrow-size-small: 0.75em;
    --arrow-size-medium: 1em;
    --arrow-size-large: 1.5em;

    --arrow-b-clip-path: polygon(100% 0, calc(100% - 1px) 0, 0 calc(100% - 1px), 0 100%, 100% 100%);
    --arrow-l-clip-path: polygon(0 100%, 100% 100%, 100% calc(100% - 1px), 1px 0, 0 0);
    --arrow-r-clip-path: polygon(100% 0, 100% 100%, calc(100% - 1px) 100%, 0 1px, 0 0);
    --arrow-t-clip-path: polygon(100% 0, 100% 1px, 1px 100%, 0 100%, 0 0);

}


/* ========================================================================
   Component: Arrow
 ========================================================================== */

.c-arrow {
    /* set base positioning for an arrow */
    position: relative;
}

.c-arrow::before {
    /* allow any border inherited by ::after to show through */
    border-width: inherit;
    border-style: inherit;
    border-color: transparent;
    background-clip: content-box;
}

.c-arrow::after {
    /* styling and z-space positioning for arrow ::after. Border styling and
    box-shadow will be automatically inherited from the parent element */
    z-index: -1;
    border: inherit;
    box-shadow: inherit;
}

.c-arrow:--around {
    /* apply shared position and sizing properties to ::before and ::after */
    position: absolute;
    transform: rotate(45deg);
    background-color: inherit;
    box-sizing: inherit;
    width: var(--arrow-size);
    height: var(--arrow-size);
    content: '';
}


/* Size modifiers
 ========================================================================== */

.c-arrow-small { --arrow-size: var(--arrow-size-small); }

.c-arrow-large { --arrow-size: var(--arrow-size-large); }


/* Style modifiers
 ========================================================================== */

/* 1. Round-off portion of the foreground square opposite the arrow tip
 *    (improved layout for IE which doesn't support `clip-path`).
 * 2. Clip portion of the foreground square opposite the arrow tip so that it
 *    doesn't interfere with container content. */

/**
 * Top
 */

.c-arrow-t::before,
.c-arrow-tl::before,
.c-arrow-tr::before {
    border-bottom-right-radius: 100%; /* [1] */
    clip-path: var(--arrow-t-clip-path); /* [2] */
    border-top-color: inherit;
    border-left-color: inherit;
}

.c-arrow-t:--around {
    /* Positions an arrow at the top(v) center(h) of the parent element */
    top: calc(var(--arrow-size) / -2);
    left: 50%;
    margin-left: calc(var(--arrow-size) / -2);
}

.c-arrow-tl:--around {
    /* Positions an arrow at the top(v) left(h) of the parent element */
    top: calc(var(--arrow-size) / -2);
    left: var(--arrow-size);
}

.c-arrow-tr:--around {
    /* Positions an arrow at the top(v) right(h) of the parent element */
    top: calc(var(--arrow-size) / -2);
    right: var(--arrow-size);
}


/**
 * Right
 */

.c-arrow-r::before,
.c-arrow-rt::before,
.c-arrow-rb::before {
    border-bottom-left-radius: 100%; /* [1] */
    clip-path: var(--arrow-r-clip-path); /* [2] */
    border-top-color: inherit;
    border-right-color: inherit;
}

.c-arrow-rt:--around {
    /* Positions an arrow at the right(h) top(v) of the parent element */
    top: var(--arrow-size);
    right: calc(var(--arrow-size) / -2);
}

.c-arrow-r:--around {
    /* Positions an arrow at the center(v) right(h) of the parent element */
    top: 50%;
    right: calc(var(--arrow-size) / -2);
    margin-top: calc(var(--arrow-size) / -2);
}

.c-arrow-rb:--around {
    /* Positions an arrow at the right(h) bottom(v) of the parent element */
    right: calc(var(--arrow-size) / -2);
    bottom: var(--arrow-size);
}


/**
 * Left
 */

.c-arrow-l::before,
.c-arrow-lt::before,
.c-arrow-lb::before {
    border-top-right-radius: 100%; /* [1] */
    clip-path: var(--arrow-l-clip-path); /* [2] */
    border-bottom-color: inherit;
    border-left-color: inherit;
}

.c-arrow-lt:--around {
    /* Positions an arrow at the left(h) top(v) of the parent element */
    top: var(--arrow-size);
    left: calc(var(--arrow-size) / -2);
}

.c-arrow-l:--around {
    /* Positions an arrow at the center(v) left(h) of the parent element */
    top: 50%;
    left: calc(var(--arrow-size) / -2);
    margin-top: calc(var(--arrow-size) / -2);
}

.c-arrow-lb:--around {
    /* Positions an arrow at the left(h) bottom(v) of the parent element */
    bottom: var(--arrow-size);
    left: calc(var(--arrow-size) / -2);
}


/**
 * Bottom
 */

.c-arrow-b::before,
.c-arrow-bl::before,
.c-arrow-br::before {
    border-top-left-radius: 100%; /* [1] */
    clip-path: var(--arrow-b-clip-path); /* [2] */
    border-bottom-color: inherit;
    border-right-color: inherit;
}

.c-arrow-b:--around {
    /* Positions an arrow at the bottom(v) center(h) of the parent element */
    bottom: calc(var(--arrow-size) / -2);
    left: 50%;
    margin-left: calc(var(--arrow-size) / -2);
}

.c-arrow-bl:--around {
    /* Positions an arrow at the bottom(v) left(h) of the parent element */
    bottom: calc(var(--arrow-size) / -2);
    left: var(--arrow-size);
}

.c-arrow-br:--around {
    /* Positions an arrow at the bottom(v) right(h) of the parent element */
    right: var(--arrow-size);
    bottom: calc(var(--arrow-size) / -2);
}
